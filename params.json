{"name":"Airportdb","body":"## AirportDB.\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here using GitHub Flavored Markdown, select a template crafted by a designer, and publish. After your page is generated, you can check out the new branch:\r\n\r\n###INTRODUCTION\r\n\r\nWww.world-airport-codes.com offers a list of all airport codes. Unfortunatly,\r\nthey don't offer a convenient way of downloading it. That is why we wrote this\r\ncollection of scripts. Additionally, we made scripts that links each airport to\r\na specific geological location, from the database from www.geonames.org. And\r\nbecause we needed the dutch name of both the city and the country the airport\r\nwas in, we included that in the table as well.\r\n\r\nThese scripts were originally not intended for release (but were released upon\r\nrequest anyway), so don't complain about the mess :)\r\n\r\n\r\n###SOFTWARE REQUIREMENTS\r\n\r\n- MySQL database (only needed when collecting the geonames info)\r\n- Ruby\r\n- Ruby gem scrapi\r\n- Ruby gem htmlentities\r\n- PHP (version 5 probably)\r\n\r\n\r\n\r\n###USAGE\r\n\r\nUsage is quite complicated, because it originally wasn't intended to be\r\ndistributed. Hopefully it will all become clear.\r\n\r\nFirst you're going to have to run the airport code scraper. Simply do this by\r\nrunning \"ruby www.world-airport-codes.com-scraper.rb\". It outputs to standard\r\nout, so you have to redirect it's output, which will be a csv file. An already\r\nscraped version of this csv file is included (www.world-airport-codes.com.csv).\r\nThe scraping can take quite a while. \r\n\r\nIf you're not interested in the geoname data, you're done now. You have a csv\r\nfull of airport code data.\r\n\r\nThen, if you're interested in the geonames data, you need to create a MySQL\r\ndatabase. Enter the database connection properties in \"db-connection.php\", as\r\ndevelopment database. Don't forget to choose the correct character encoding\r\ncommand! \r\n\r\nThen you need to load the database structure. This step is a bit complex. Load\r\nthe files 001_* and 002* into your database by hand with the command \r\n\"mysql --user=user --password=password --host=host databasename < mysql-commands.mysql\" \r\n(run it once for 001_... and then for 002_...).  Then, run \r\n\"php migrate.php\". If all goes well, it should perform all the changes to the\r\ndatabase to arrive at the version we ended up using. For more information about\r\nthe migration script, go to http://www.halfgaar.net/mysql-migrations. I\r\nrecommend you use a database on the localhost, otherwise it will be very very\r\nslow.\r\n\r\nThe geoname data files can be downloaded at:\r\nhttp://download.geonames.org/export/dump/. You need allCountries.zip and\r\nalternateNames.zip. The specification of the data fields can be found there as\r\nwell.\r\n\r\nThen you may want to run the \"filter-geonames.rb\" script, to remove everything\r\nfrom these csv files you don't need. For me, it meant going from a 700MB csv\r\nfile, to a 250 MB one, so it was worth it.\r\n\r\nThen load the airport codes csv file into the database. This is done with the\r\nphp script reload_airport_data_into_db.php.\r\n\r\nThe next step is to run the geo_names_extractor.php script, which gives each\r\nairport a city_name_geo_name_id or country_name_geo_name_id. It also sets the\r\nDutch city and country names for each airport.\r\n\r\nWhen this is all done, you have a database full of useful information. If you\r\nwant this in a csv file, you can use the script dump_airport_data_from_db.php\r\nto dump the database contents to CSV.\r\n\r\n\r\n###ADDITIONAL INFORMATION\r\n\r\nAlso read the introductory comment in each script for more details about it.\r\nThey might say a bit more than this README file does.\r\n\r\n\r\n\r\n###AIRPORT COORDINATES\r\n\r\nWe found that a lot of airports in the airport codes database don't have proper\r\ncoordinates (some are in the middle of the sea...). This is partly because\r\nobscure airports, like helipads, are listed, of which nobody really confirmed\r\nthe coordinates, I guess. If you want (more) reliable ones, use the ones from\r\nthe geonames data (although you will have the coordinates of the city, not the\r\nairfield). If you did everything I mentioned in this script, they can be found\r\nin the \"cities\" table in your database. Simply do a join based on the\r\ncity_name_geo_name_id between cities and airport_codes.\r\n\r\n\r\n###BUGS/PROBLEMS\r\n\r\nShould there be any problems, you can contact Wiebe Cazemier (wiebe@halfgaar.net). \r\n\r\n\r\n\r\n###AUTHORS\r\n\r\n- Wiebe Cazemier (http://www.halfgaar.net, wiebe@halfgaar.net) \r\n- Rowan Rodrik van der Molen","tagline":"Database of Airports with geolocations","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}